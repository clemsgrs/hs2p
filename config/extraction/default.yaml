csv: '' # path to the .csv / .txt file containing slides paths

output_dir: 'output/debug' # folder where to save algorithm output
experiment_name: 'patch_extraction'
resume: false # whether or not to resume existing experiment
resume_id:

backend: 'openslide' # which image backend should be used when opening whole slide images (chose among 'openslide', 'pyvips' or 'asap')

flags:
  patch: true # whether or not to extract patches from segmented tissue regions
  visu: true # whether or not to generate a .jpg image to visualize patching results
  verbose: false

seg_params:
  downsample: 64 # if seg_level = -1, then uses this value to find the closest downsample level in the WSI for tissue segmentation computation
  sthresh: 8 # segmentation threshold (positive integer, using a higher threshold leads to less foreground and more background detection) (not used when use_otsu=True)
  mthresh: 7 # median filter size (positive, odd integer)
  close: 4 # additional morphological closing to apply following initial thresholding (positive integer)
  use_otsu: false # use otsu's method instead of simple binary thresholding
  save_mask: false # save tissue mask to disk as a .tif image
  visualize_mask: true # save a visualization of the tissue mask as a .jpg image
  tissue_pixel_value: 1 # value of tissue pixel in pre-computed segmentation masks

filter_params:
  ref_patch_size: 256 # reference patch size at spacing patch_params.spacing
  a_t: 16 # area filter threshold for tissue (positive integer, the minimum size of detected foreground contours to consider, relative to the reference patch size ref_patch_size, e.g. a value 10 means only detected foreground contours of size greater than 10 [ref_patch_size, ref_patch_size] sized patches at spacing patch_params.spacing will be processed)
  a_h: 4 # area filter threshold for holes (positive integer, the minimum size of detected holes/cavities in foreground contours to avoid, once again relative to the reference patch size ref_patch_size)
  max_n_holes: 8 # maximum of holes to consider per detected foreground contours (positive integer, higher values lead to more accurate patching but increase computational cost ; keeps the biggest holes)

vis_params:
  downsample: 64 # if vis_level = -1, then uses this value to find the closest downsample level in the WSI for tissue segmentation visualization
  downscale: 64 # downsample to visualize the result of patch extraction
  line_thickness: 150 # line thickness to draw the segmentation results (positive integer)

patch_params:
  spacing: 0.5 # pixel spacing (in micron/pixel) at which patches should be extracted (will find the level with spacing the closest to this value)
  patch_size: 4096 # patch size at previous pixel spacing
  overlap: 0. # percentage of overlap between two consecutive patches (float between 0 and 1)
  use_padding: true # whether to pad the border of the slide
  contour_fn: 'pct' # contour checking function to decide whether a patch should be considered foreground or background (choices between 'pct' - checks if the given patch has enough tissue using the following parameter as decision threshold, 'four_pt' - checks if all four points in a small grid around the center of the patch are inside the contour, 'center' - checks if the center of the patch is inside the contour, 'basic' - checks if the top-left corner of the patch is inside the contour)
  tissue_thresh: 0.1 # if contour_fn = 'pct', threshold used to filter out patches that have less tissue than this value (percentage)
  drop_holes: false # whether or not to drop patches whose center pixel falls withing an identified holes
  save_patches_to_disk: false # whether or not to save patches as images to disk
  save_patches_in_common_dir: false # whether to save patches from different slides in a single common directory
  save_npy: false # whether to save patch info in a .npy file
  format: 'jpg' # if save_patches_to_disk = true, then saves patches in this file format
  draw_grid: true # whether to draw the patch grid when visualizing patching results
  grid_thickness: 1 # sets the grid thickness ((in px) when visualizing patching results (256: 1, 4096: 2)
  bg_color: # which (r,g,b) values should be used to represent background when visualizing patching results
    - 214
    - 233
    - 238

speed:
  multiprocessing: true
  num_workers: 10 # number of process to start in parallel

wandb:
  enable: false
  project: 'hs2p'
  exp_name: '${experiment_name}'
  username: 'clemsg'
  dir: '/home/user'
  group:
  tags: []